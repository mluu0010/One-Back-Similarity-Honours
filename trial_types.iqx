***************************************************************************
***************************************************************************
			Color Similarity Across Retinal Eccentricity
			2 stimuli, fixed vs. scaled size patches, during
			Main Experimental Trials
***************************************************************************
***************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	INCLUDE
*******************************************************************************************************************
*******************************************************************************************************************
<include >
/file = "main.iqx"
/file = "general_stimuli.iqx"
</include>
*******************************************************************************************************************
*******************************************************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	Initialised Constants:
*******************************************************************************************************************
*******************************************************************************************************************

<values>

</values>

*******************************************************************************************************************
*******************************************************************************************************************
	STIMULI
*******************************************************************************************************************
*******************************************************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	TRIALS
*******************************************************************************************************************
*******************************************************************************************************************

<trial trial_selection>
/ stimulusframes = [1 = cross]
/ timeout = 500
/ recorddata = false
/ ontrialend = [
	values.Circle_1 = 0;
	values.Circle_2 = 0;
	values.Circle_3 = 0;
	values.Circle_4 = 0;
	values.Position_1 = 0;
	values.Position_2 = 0;
	values.Position_3 = 0;
	values.Position_4 = 0;
	values.Color_1 = 0;
	values.Color_2 = 0;
	values.Color_3 = 0;
	values.Color_4 = 0;
	values.response = 0;
	values.trial_type = "";
	values.catch_vals = "";
]
/ branch = [ // working properly now
	values.sequence_number = counter.sequence.selectedvalue; // debugging aid
	if(item.sequence.item(counter.sequence.selectedvalue) == "during"){ // working & integrated
		trial.present_during
	} else {
		trial.catch // working & integrated
	}
]
</trial>

********* During ***********

<trial present_during>
/ ontrialbegin = [
	
	values.trial_number += 1;
	values.trial_type = "during";
	values.order_num = counter.order_during.selectedvalue; // debugging aid
	
	// initialise a random angle to place the first stimulus at, all other stimuli will be 
	// place with reference to that initial choice
	// angle_x has 0 at the right (E), i.e. the x-axis, positive angles go clockwise
	values.angle_1 = rand(-30,30); // changed to limit stimulus placement
	values.angle_2 = values.angle_1 + 180;
	values.angle_3 = values.angle_1 + 180;
	values.angle_4 = values.angle_1;
	
	// angle_x_cue has 0 at the top (N), i.e. the y-axis
	values.angle_1_cue = values.angle_1+90;
	values.angle_2_cue = values.angle_2+90;
	values.angle_3_cue = values.angle_3+90;
	values.angle_4_cue = values.angle_4+90;
	
	// needed to reset the stimuli after displaying them on the response screen
	shape.F1.hposition = expressions.a_1;
	shape.F1.vposition = expressions.b_1;
	shape.F2.hposition = expressions.a_2;
	shape.F2.vposition = expressions.b_2;
	shape.P1.hposition = expressions.a_3;
	shape.P1.vposition = expressions.b_3;
	shape.P2.hposition = expressions.a_4;
	shape.P2.vposition = expressions.b_4;
	shape.F1.height = 2 * values.r_F;
	shape.F1.width = 2 * values.r_F;
	shape.F2.height = 2 * values.r_F;
	shape.F2.width = 2 * values.r_F;
	shape.P1.height = 2 * values.R_P;
	shape.P1.width = 2 * values.R_P;
	shape.P2.height = 2 * values.R_P;
	shape.P2.width = 2 * values.R_P;
	
	// counter.order_during picks one of the trials out of the set of trials for this trial type
	// there are (#stimuli)^2 * # conditions_for_trial_type trials in counter.order_during
	// in this example there are 5*5*3 = 75 trials to choose from

	if(item.present_during_eccen.item(counter.order_during.selectedvalue) == "FF"){ // starting with Fovea-Fovea
	
		// insert the stimuli immediately upon trial commencement, no delay
		trial.present_during.insertstimulusframe(text.cross,1);
		
		trial.present_during.insertstimulusframe(shape.F1,1);
		trial.present_during.insertstimulusframe(shape.F2,1);
		
		// record that the stimuli were both placed foveally
		values.Circle_1 = -1;
		values.Circle_2 = -1;
		values.Position_1 = values.angle_1;
		values.Position_2 = values.angle_2;
		
		
		// Choosing colours for the stimuli
		// present_during_colour1 and present_during_colour2 each have a unique combination of colours for each trial
		// they are specified in 'BaseScript.iqx'
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.F1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.F1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.F1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.F1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.F1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.F1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.F1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.F1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.F1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.F2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.F2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.F2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.F2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.F2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.F2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.F2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.F2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.F2.color = values.color9;
			values.Color_2 = 9;
		}
		
	// see above for documentation. Inquisit doesn't allow functions, so have to specify everything again for Fovea-Periphery	
	}else if (item.present_during_eccen.item(counter.order_during.selectedvalue) == "FP"){
		trial.present_during.insertstimulusframe(text.cross,1);
		
		trial.present_during.insertstimulusframe(shape.F1,1);
		trial.present_during.insertstimulusframe(shape.P1,1);
		values.Circle_1 = -1;
		values.Circle_2 = 1;
		values.Position_1 = values.angle_1;
		values.Position_2 = values.angle_3;
		
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.F1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.F1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.F1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.F1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.F1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.F1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.F1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.F1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.F1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.P1.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.P1.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.P1.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.P1.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.P1.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.P1.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.P1.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.P1.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.P1.color = values.color9;
			values.Color_2 = 9;
		}
		
	// see above for documentation. Inquisit doesn't allow functions, so have to specify everything again for Fovea-Periphery
	}else if (item.present_during_eccen.item(counter.order_during.selectedvalue) == "PP"){
		trial.present_during.insertstimulusframe(text.cross,1);
		
		trial.present_during.insertstimulusframe(shape.P1,1);
		trial.present_during.insertstimulusframe(shape.P2,1);
		values.Circle_1 = 1;
		values.Circle_2 = 1;
		values.Position_1 = values.angle_3;
		values.Position_2 = values.angle_4;
			
		
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.P1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.P1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.P1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.P1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.P1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.P1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.P1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.P1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.P1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.P2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.P2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.P2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.P2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.P2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.P2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.P2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.P2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.P2.color = values.color9;
			values.Color_2 = 9;
		}
	}
	
]
/ stimulusframes = []
/ timeout = values.patch_timeout // how long the trial lasts for, specified in 'main.iqx'
/ recorddata = false
/ ontrialend = [
	trial.present_during.clearstimulusframes(); // not sure if this is strictly necessary
]
/ branch = [trial.response_options] // display the various response options. Back on 'response.iqx'
</trial>

********* Catch *********** // NEEDS TO GENERALLY BE FIXED AS PER NAO'S SUGGESTIONS
<trial catch>
/ ontrialbegin = [
				trial.catch.insertstimulusframe(text.catch,1);
				values.trial_type = "catch";
				]
/ timeout = values.patch_timeout
/ recorddata = false
/ branch = [trial.response_options_catch] // special catch trial response options
</trial>

*******************************************************************************************************************
*******************************************************************************************************************
	BLOCKS
*******************************************************************************************************************
*******************************************************************************************************************